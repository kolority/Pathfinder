{"ast":null,"code":"var _jsxFileName = \"/Users/aqtruong/Desktop/pathfinding/algorithm-path-visualizer/src/components/Pathfind.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Node from \"./Node\";\nimport \"./Pathfind.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cols = '5';\nconst rows = '5';\n\nconst Pathfind = () => {\n  _s();\n\n  const [Grid, setGrid] = useState([]);\n  useEffect(() => {\n    initializeGrid();\n  }, []); //Creates the grid\n\n  const initializeGrid = () => {\n    const grid = new Array(cols);\n\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    createSpot(grid);\n    setGrid(grid);\n  };\n\n  const createSpot = grid => {\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Spot(i, j);\n      }\n    }\n  }; //spot constructor\n\n\n  function Spot(i, j) {\n    this.x = i;\n    this.j = j;\n    this.g = 0;\n    this.f = 0;\n    this.h = 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Pathfind Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pathfind, \"LLLgB117dTzJtmrdVZ6pOaCL21I=\");\n\n_c = Pathfind;\nexport default Pathfind;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pathfind\");","map":{"version":3,"names":["React","useState","useEffect","Node","cols","rows","Pathfind","Grid","setGrid","initializeGrid","grid","Array","i","createSpot","j","Spot","x","g","f","h"],"sources":["/Users/aqtruong/Desktop/pathfinding/algorithm-path-visualizer/src/components/Pathfind.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Node from \"./Node\";\nimport \"./Pathfind.css\";\nconst cols = '5';\nconst rows = '5';\n\nconst Pathfind = () => {\n  const [Grid, setGrid] = useState([]);\n\n  useEffect(() => {\n    initializeGrid();\n  }, [])\n  //Creates the grid\n  const initializeGrid = () => {\n    const grid = new Array(cols);\n\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n    createSpot(grid);\n    setGrid(grid);\n\n  }\n\n  const createSpot = (grid) => {\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Spot(i, j);\n      }\n    }\n  }\n  //spot constructor\n  function Spot(i, j) {\n    this.x = i;\n    this.j = j;\n    this.g = 0;\n    this.f = 0;\n    this.h = 0;\n\n  }\n\n\n\n  return (\n    <div>\n      <h1> Pathfind Component</h1>\n    </div>\n  )\n}\n\nexport default Pathfind;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AACA,MAAMC,IAAI,GAAG,GAAb;AACA,MAAMC,IAAI,GAAG,GAAb;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACdO,cAAc;EACf,CAFQ,EAEN,EAFM,CAAT,CAHqB,CAMrB;;EACA,MAAMA,cAAc,GAAG,MAAM;IAC3B,MAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUP,IAAV,CAAb;;IAEA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAApB,EAA0BQ,CAAC,EAA3B,EAA+B;MAC7BF,IAAI,CAACE,CAAD,CAAJ,GAAU,IAAID,KAAJ,CAAUN,IAAV,CAAV;IACD;;IACDQ,UAAU,CAACH,IAAD,CAAV;IACAF,OAAO,CAACE,IAAD,CAAP;EAED,CATD;;EAWA,MAAMG,UAAU,GAAIH,IAAD,IAAU;IAC3B,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAApB,EAA0BQ,CAAC,EAA3B,EAA+B;MAC7B,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAApB,EAA0BS,CAAC,EAA3B,EAA+B;QAC7BJ,IAAI,CAACE,CAAD,CAAJ,CAAQE,CAAR,IAAa,IAAIC,IAAJ,CAASH,CAAT,EAAYE,CAAZ,CAAb;MACD;IACF;EACF,CAND,CAlBqB,CAyBrB;;;EACA,SAASC,IAAT,CAAcH,CAAd,EAAiBE,CAAjB,EAAoB;IAClB,KAAKE,CAAL,GAASJ,CAAT;IACA,KAAKE,CAAL,GAASA,CAAT;IACA,KAAKG,CAAL,GAAS,CAAT;IACA,KAAKC,CAAL,GAAS,CAAT;IACA,KAAKC,CAAL,GAAS,CAAT;EAED;;EAID,oBACE;IAAA,uBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1CD;;GAAMb,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}